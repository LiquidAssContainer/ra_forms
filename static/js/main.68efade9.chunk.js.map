{"version":3,"sources":["components/HexConverter/HexInput/HexInput.jsx","components/HexConverter/constants.js","components/HexConverter/HexConverter.jsx","components/HexConverter/utils.js","components/StepsManager/Form/Input.jsx","components/StepsManager/constants.js","components/StepsManager/Form/Form.jsx","components/StepsManager/utils.js","components/StepsManager/Records/Button.jsx","components/StepsManager/Records/RecordList.jsx","components/StepsManager/Records/Records.jsx","components/StepsManager/StepsManager.jsx","App.jsx","index.js"],"names":["HexInput","value","onHexInputChange","className","onChange","e","target","length","slice","type","CONVERTER_STATES","state","backgroundColor","output","HexConverter","useState","converterState","setConverterState","hexValue","setHexValue","CopyButton","onClick","navigator","clipboard","writeText","style","result","decimalColors","match","map","decimal","parseInt","secondHexDigit","Number","isNaN","Error","red","green","blue","convertHexToRgb","Input","name","label","formData","onInputChange","isInvalid","ErrorMessage","text","classnames","invalid","LABEL_TITLES","INITIAL_FORM","date","distance","Form","onRecordAdd","setFormData","invalidFields","setInvalidFields","highlightInvalidFields","data","newInvalidFieldsState","field","validateForm","prev","onSubmit","preventDefault","reset","saveLocalData","json","JSON","stringify","localStorage","setItem","formatDateToDMY","split","year","month","day","Button","buttonType","clickHandler","RecordList","children","records","onRecordRemove","Record","record","recordList","Records","props","headlines","Headline","StepsManager","initialData","getItem","parse","loadLocalData","setRecords","theSameDateRecord","find","newRecord","push","sortedRecords","sort","a","b","sortRecordsByDate","recordIndex","findIndex","splice","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68efade9.chunk.js","sourcesContent":["export function HexInput({ value, onHexInputChange }) {\n  const onChange = (e) => {\n    const { value } = e.target;\n    if (value.length <= 7) {\n      onHexInputChange(value.slice(1));\n    }\n  };\n\n  return (\n    <input\n      className=\"hex-input\"\n      onChange={onChange}\n      value={`#${value}`}\n      type=\"text\"\n    />\n  );\n}\n","export const CONVERTER_STATES = {\n  default: {\n    state: 'default',\n    backgroundColor: '#fff',\n    output: 'rgb(...)',\n  },\n  error: {\n    state: 'error',\n    backgroundColor: '#e74c3c',\n    output: 'Ошибка!',\n  },\n};\n","import { useState } from 'react';\n\nimport { HexInput } from './HexInput/HexInput';\n\nimport { CONVERTER_STATES } from './constants';\nimport { convertHexToRgb } from './utils';\n\nexport function HexConverter() {\n  const [converterState, setConverterState] = useState(\n    CONVERTER_STATES.default,\n  );\n  const [hexValue, setHexValue] = useState('');\n\n  const onHexInputChange = (value) => {\n    setHexValue(value);\n\n    if (value.length === 6) {\n      try {\n        const result = convertHexToRgb(value);\n        const newConverterState = {\n          state: 'success',\n          backgroundColor: result,\n          output: result,\n        };\n        setConverterState(newConverterState);\n      } catch {\n        // всегда меняется на другой объект, поэтому без спред-оператора\n        setConverterState(CONVERTER_STATES.error);\n      }\n    } else if (converterState.state !== 'default') {\n      setConverterState(CONVERTER_STATES.default);\n    }\n  };\n\n  const CopyButton = () => {\n    const onClick = () => navigator.clipboard.writeText(converterState.output);\n\n    return (\n      <button className=\"copy-btn\" onClick={onClick}>\n        copy\n      </button>\n    );\n  };\n\n  const { backgroundColor, output } = converterState;\n\n  return (\n    <div className=\"hex-container\" style={{ backgroundColor }}>\n      <HexInput\n        className=\"hex-input\"\n        value={hexValue}\n        onHexInputChange={onHexInputChange}\n      />\n      <div className=\"rgb-output\">\n        {output}\n        {converterState.state === 'success' && <CopyButton />}\n      </div>\n    </div>\n  );\n}\n","export function convertHexToRgb(value) {\n  // решётку сделал неудаляемым символом инпута, сюда кидаю значение без решётки\n  const hexColors = value.match(/.{1,2}/g);\n  const decimalColors = hexColors.map((value) => {\n    const decimal = parseInt(value, 16);\n    // проверку добавил из-за особенности parseInt, игнорирующей последующие невалидные символы ('fq' не будет ошибкой)\n    const secondHexDigit = parseInt(value[1], 16);\n    if (\n      Number.isNaN(decimal) ||\n      Number.isNaN(secondHexDigit) ||\n      decimal < 0 ||\n      decimal > 255\n    )\n      throw new Error();\n    return decimal;\n  });\n\n  const [red, green, blue] = decimalColors;\n  return `rgb(${red}, ${green}, ${blue})`;\n}\n","import classnames from 'classnames';\n\nexport function Input({\n  name,\n  label,\n  type,\n  formData,\n  onInputChange,\n  isInvalid,\n}) {\n  const ErrorMessage = ({ text }) => {\n    return <div className=\"input_error-message\">{text}</div>;\n  };\n\n  return (\n    <label className=\"form_label\">\n      <span className=\"form_label_text\">{label}</span>\n      <input\n        className={classnames('form_input', { invalid: isInvalid })}\n        name={name}\n        type={type}\n        value={formData[name]}\n        onChange={onInputChange}\n      />\n      {isInvalid && <ErrorMessage text={'Заполните это поле!'} />}\n    </label>\n  );\n}\n","export const LABEL_TITLES = {\n  date: 'Дата (ДД.ММ.ГГ)',\n  distance: 'Пройдено (км)',\n  actions: 'Действия',\n};\n\nexport const INITIAL_FORM = {\n  date: '',\n  distance: '',\n};\n","import { useState } from 'react';\nimport { Input } from './Input';\nimport { INITIAL_FORM, LABEL_TITLES } from '../constants';\n\nexport function Form({ onRecordAdd }) {\n  const [formData, setFormData] = useState(INITIAL_FORM);\n  const [invalidFields, setInvalidFields] = useState({});\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const isValid = validateForm(formData);\n    if (isValid) {\n      setFormData(INITIAL_FORM);\n      e.target.reset();\n      onRecordAdd(formData);\n    } else {\n      highlightInvalidFields(formData);\n    }\n  };\n\n  const highlightInvalidFields = (data) => {\n    const newInvalidFieldsState = {};\n    for (const field in data) {\n      newInvalidFieldsState[field] = !data[field];\n    }\n    setInvalidFields(newInvalidFieldsState);\n  };\n\n  const validateForm = (data) => {\n    // инпута всего два, так что без оверинжинирнга\n    const { date, distance } = data;\n    return date && distance;\n  };\n\n  const onInputChange = (e) => {\n    const { value, name } = e.target;\n    setInvalidFields((prev) => ({ ...prev, [name]: false }));\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <form className=\"steps-manager_form\" onSubmit={onSubmit}>\n      <Input\n        name=\"date\"\n        type=\"date\"\n        label={LABEL_TITLES.date}\n        onInputChange={onInputChange}\n        formData={formData}\n        isInvalid={invalidFields.date}\n      />\n      <Input\n        name=\"distance\"\n        type=\"number\"\n        label={LABEL_TITLES.distance}\n        onInputChange={onInputChange}\n        formData={formData}\n        isInvalid={invalidFields.distance}\n      />\n      <button className=\"form_submit-btn\" type=\"submit\">\n        ОК\n      </button>\n    </form>\n  );\n}\n","export function saveLocalData(data) {\n  const json = JSON.stringify(data);\n  localStorage.setItem('steps-manager', json);\n}\n\nexport function loadLocalData() {\n  const json = localStorage.getItem('steps-manager');\n  try {\n    return JSON.parse(json);\n  } catch {\n    return null;\n  }\n}\n\nexport function sortRecordsByDate(data) {\n  return data.sort((a, b) => {\n    if (a.date < b.date) return 1;\n    if (a.date > b.date) return -1;\n    return 0;\n  });\n}\n\nexport function formatDateToDMY(date) {\n  const [year, month, day] = date.split('-');\n  return `${day}.${month}.${year}`;\n}\n","export function Button({ buttonType, clickHandler, date }) {\n  const onClick = () => {\n    // date тут по сути вместо id\n    clickHandler(date);\n  };\n\n  return (\n    <button\n      // buttonType на случай кнопки edit\n      className={`record_${buttonType}-btn`}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {buttonType === 'remove' ? 'удалить' : 'редактировать'}\n    </button>\n  );\n}\n","import { formatDateToDMY } from '../utils';\nimport { Button } from './Button';\n\nexport function RecordList({ children }) {\n  const { records, onRecordRemove } = children;\n\n  const Record = ({ record }) => {\n    const { date, distance } = record;\n\n    return (\n      <div className=\"steps-manager_record\">\n        <div className=\"record_date\">{formatDateToDMY(date)}</div>\n        <div className=\"record_distance\">{distance}</div>\n        {/* <Button buttonType=\"edit\" clickHandler={onRecordEdit} date={date} /> */}\n        <Button buttonType=\"remove\" clickHandler={onRecordRemove} date={date} />\n      </div>\n    );\n  };\n\n  const recordList = records.map((record) => (\n    <Record record={record} key={record.date} />\n  ));\n\n  return <div className=\"steps-manager_records_container\">{recordList}</div>;\n}\n","import { LABEL_TITLES } from '../constants';\nimport { RecordList } from './RecordList';\n\nexport function Records(props) {\n  const { date, distance, actions } = LABEL_TITLES;\n  const headlines = [date, distance, actions];\n\n  const Headline = ({ text }) => <div className=\"records_headline\">{text}</div>;\n\n  return (\n    <div className=\"steps-manager_records\">\n      <div className=\"records_headlines\">\n        {headlines.map((text) => (\n          <Headline text={text} key={text} />\n        ))}\n      </div>\n      <RecordList>{props}</RecordList>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nimport { Form } from './Form/Form';\nimport { Records } from './Records/Records';\n\nimport { loadLocalData, saveLocalData, sortRecordsByDate } from './utils';\n\nexport function StepsManager() {\n  const initialData = loadLocalData() || [];\n  const [records, setRecords] = useState(initialData);\n\n  const onRecordAdd = (data) => {\n    const { date, distance } = data;\n    const theSameDateRecord = records.find((record) => record.date === date);\n\n    if (theSameDateRecord) {\n      theSameDateRecord.distance += Number(distance);\n      setRecords((prev) => [...prev]);\n    } else {\n      const newRecord = { date, distance: Number(distance) };\n      records.push(newRecord);\n      const sortedRecords = sortRecordsByDate(records);\n      setRecords([...sortedRecords]);\n    }\n\n    saveLocalData(records);\n  };\n\n  const onRecordRemove = (date) => {\n    const recordIndex = records.findIndex((record) => record.date === date);\n    if (recordIndex !== -1) {\n      records.splice(recordIndex, 1);\n      setRecords([...records]);\n      saveLocalData(records);\n    } else {\n      console.log('Ну вообще такого элемента уже нет');\n    }\n  };\n\n  return (\n    <div className=\"steps-manager_container\">\n      <Form onRecordAdd={onRecordAdd} />\n      <Records records={records} onRecordRemove={onRecordRemove} />\n    </div>\n  );\n}\n","import { HexConverter } from './components/HexConverter/HexConverter';\nimport { StepsManager } from './components/StepsManager/StepsManager';\n\nimport './styles/app.css';\n\nexport function App() {\n  return (\n    <>\n      <HexConverter />\n      <StepsManager />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}